{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Twitter =\n/** @class */\nfunction () {\n  function Twitter(faker) {\n    this.faker = faker;\n  }\n\n  Twitter.prototype.user = function (includeStatus, includeEmail) {\n    if (includeStatus === void 0) {\n      includeStatus = true;\n    }\n\n    if (includeEmail === void 0) {\n      includeEmail = false;\n    }\n\n    var userId = this.faker.Number.between(1, 9223372036854775807);\n    var createdAt = this.faker.Date.between(new Date(2006, 2, 21), new Date());\n    var backgroundImageUrl = this.faker.LoremPixel.image('600x400');\n    var profileImageUrl = this.faker.Avatar.image(userId.toString(), '48x48');\n    var user = {\n      id: userId,\n      id_str: \"\" + userId,\n      contributors_enabled: this.faker.Boolean.boolean(0.1),\n      created_at: createdAt,\n      default_profile_image: this.faker.Boolean.boolean(0.1),\n      default_profile: this.faker.Boolean.boolean(0.1),\n      description: this.faker.Lorem.sentence(),\n      email: includeEmail ? this.faker.Internet.safeEmail() : undefined,\n      entities: this.userEntities(),\n      favourites_count: this.faker.Number.between(1, 100000),\n      follow_request_sent: false,\n      followers_count: this.faker.Number.between(1, 10000000),\n      following: false,\n      friends_count: this.faker.Number.between(1, 100000),\n      geo_enabled: this.faker.Boolean.boolean(0.1),\n      is_translation_enabled: this.faker.Boolean.boolean(0.1),\n      is_translator: this.faker.Boolean.boolean(0.1),\n      lang: this.faker.Address.countryCode(),\n      listed_count: this.faker.Number.between(1, 1000),\n      location: this.faker.Address.city() + \", \" + this.faker.Address.stateAbbr() + \", \" + this.faker.Address.countryCode(),\n      name: this.faker.Name.name(),\n      notifications: false,\n      profile_background_color: this.faker.Color.hexColor(),\n      profile_background_image_url_https: backgroundImageUrl,\n      profile_background_image_url: backgroundImageUrl.replace('https://', 'http://'),\n      profile_background_tile: this.faker.Boolean.boolean(0.1),\n      profile_banner_url: this.faker.LoremPixel.image('1500x500'),\n      profile_image_url_https: profileImageUrl,\n      profile_image_url: profileImageUrl.replace('https://', 'http://'),\n      profile_link_color: this.faker.Color.hexColor(),\n      profile_sidebar_border_color: this.faker.Color.hexColor(),\n      profile_sidebar_fill_color: this.faker.Color.hexColor(),\n      profile_text_color: this.faker.Color.hexColor(),\n      profile_use_background_image: this.faker.Boolean.boolean(0.4),\n      protected: this.faker.Boolean.boolean(0.1),\n      screen_name: this.screenName(),\n      status: includeStatus ? this.status(false) : undefined,\n      statuses_count: this.faker.Number.between(1, 100000),\n      time_zone: this.faker.Address.timeZone(),\n      url: 'http://example.com',\n      utc_offset: this.utcOffset(),\n      verified: this.faker.Boolean.boolean(0.1)\n    };\n    return user;\n  };\n\n  Twitter.prototype.status = function (includeUser, includePhoto) {\n    if (includeUser === void 0) {\n      includeUser = true;\n    }\n\n    if (includePhoto === void 0) {\n      includePhoto = false;\n    }\n\n    var statusId = this.faker.Number.between(1, 9223372036854775807);\n    var createdAt = this.faker.Date.between(new Date(2006, 2, 21), new Date());\n    var status = {\n      id: statusId,\n      id_str: \"\" + statusId,\n      contributors: null,\n      coordinates: null,\n      created_at: createdAt,\n      entities: this.statusEntities(includePhoto),\n      favourite_count: this.faker.Number.between(1, 10000),\n      favourited: false,\n      geo: null,\n      in_reply_to_screen_name: null,\n      in_reply_to_status_id: null,\n      in_reply_to_user_id_str: null,\n      in_reply_to_user_id: null,\n      is_quote_status: false,\n      lang: this.faker.Address.countryCode(),\n      nil: null,\n      place: null,\n      possibly_sensitive: this.faker.Boolean.boolean(0.1),\n      retweet_count: this.faker.Number.between(1, 10000),\n      retweeted_status: null,\n      retweeted: false,\n      source: \"<a href=\\\"\" + this.faker.Internet.url('example.com') + \"\\\" rel=\\\"nofollow\\\">\" + this.faker.Company.name + \"</a>\",\n      text: this.faker.Lorem.sentence(),\n      truncated: false,\n      user: includeUser ? this.user(false) : undefined\n    };\n\n    if (includePhoto) {\n      status.text = status.text + \" \" + status.entities.media[0].url;\n    }\n\n    return status;\n  };\n\n  Twitter.prototype.screenName = function () {\n    return this.faker.Internet.userName().substring(0, 20);\n  };\n\n  Twitter.prototype.utcOffset = function () {\n    return this.faker.Number.between(-43200, 50400);\n  };\n\n  Twitter.prototype.userEntities = function () {\n    return {\n      url: {\n        urls: []\n      },\n      description: {\n        urls: []\n      }\n    };\n  };\n\n  Twitter.prototype.statusEntities = function (includePhoto) {\n    return {\n      hashtags: [],\n      symbols: [],\n      user_mentions: [],\n      urls: [],\n      media: includePhoto ? [this.photoEntity()] : []\n    };\n  };\n\n  Twitter.prototype.photoEntity = function () {\n    var mediaUrl = this.faker.LoremPixel.image('1064x600');\n    var mediaId = this.faker.Number.between(1, 9223372036854775807);\n    return {\n      id: mediaId,\n      id_str: \"\" + mediaId,\n      indices: [103, 126],\n      media_url: mediaUrl.replace('https://', 'http://'),\n      media_url_https: mediaUrl,\n      url: this.faker.Internet.url('example.com'),\n      display_url: 'example.com',\n      expanded_url: this.faker.Internet.url('example.com'),\n      type: 'photo',\n      sizes: {\n        medium: {\n          w: 1064,\n          h: 600,\n          resize: 'fit'\n        },\n        large: {\n          w: 1064,\n          h: 600,\n          resize: 'fit'\n        },\n        small: {\n          w: 680,\n          h: 383,\n          resize: 'fit'\n        },\n        thumb: {\n          w: 150,\n          h: 150,\n          resize: 'crop'\n        }\n      }\n    };\n  };\n\n  return Twitter;\n}();\n\nexports.Twitter = Twitter;","map":{"version":3,"sources":["/Users/crystalligence/Desktop/pokedex/node_modules/fakergem/lib/faker/twitter.js"],"names":["Object","defineProperty","exports","value","Twitter","faker","prototype","user","includeStatus","includeEmail","userId","Number","between","createdAt","Date","backgroundImageUrl","LoremPixel","image","profileImageUrl","Avatar","toString","id","id_str","contributors_enabled","Boolean","boolean","created_at","default_profile_image","default_profile","description","Lorem","sentence","email","Internet","safeEmail","undefined","entities","userEntities","favourites_count","follow_request_sent","followers_count","following","friends_count","geo_enabled","is_translation_enabled","is_translator","lang","Address","countryCode","listed_count","location","city","stateAbbr","name","Name","notifications","profile_background_color","Color","hexColor","profile_background_image_url_https","profile_background_image_url","replace","profile_background_tile","profile_banner_url","profile_image_url_https","profile_image_url","profile_link_color","profile_sidebar_border_color","profile_sidebar_fill_color","profile_text_color","profile_use_background_image","protected","screen_name","screenName","status","statuses_count","time_zone","timeZone","url","utc_offset","utcOffset","verified","includeUser","includePhoto","statusId","contributors","coordinates","statusEntities","favourite_count","favourited","geo","in_reply_to_screen_name","in_reply_to_status_id","in_reply_to_user_id_str","in_reply_to_user_id","is_quote_status","nil","place","possibly_sensitive","retweet_count","retweeted_status","retweeted","source","Company","text","truncated","media","userName","substring","urls","hashtags","symbols","user_mentions","photoEntity","mediaUrl","mediaId","indices","media_url","media_url_https","display_url","expanded_url","type","sizes","medium","w","h","resize","large","small","thumb"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Twitter = /** @class */ (function () {\n    function Twitter(faker) {\n        this.faker = faker;\n    }\n    Twitter.prototype.user = function (includeStatus, includeEmail) {\n        if (includeStatus === void 0) { includeStatus = true; }\n        if (includeEmail === void 0) { includeEmail = false; }\n        var userId = this.faker.Number.between(1, 9223372036854775807);\n        var createdAt = this.faker.Date.between(new Date(2006, 2, 21), new Date());\n        var backgroundImageUrl = this.faker.LoremPixel.image('600x400');\n        var profileImageUrl = this.faker.Avatar.image(userId.toString(), '48x48');\n        var user = {\n            id: userId,\n            id_str: \"\" + userId,\n            contributors_enabled: this.faker.Boolean.boolean(0.1),\n            created_at: createdAt,\n            default_profile_image: this.faker.Boolean.boolean(0.1),\n            default_profile: this.faker.Boolean.boolean(0.1),\n            description: this.faker.Lorem.sentence(),\n            email: includeEmail ? this.faker.Internet.safeEmail() : undefined,\n            entities: this.userEntities(),\n            favourites_count: this.faker.Number.between(1, 100000),\n            follow_request_sent: false,\n            followers_count: this.faker.Number.between(1, 10000000),\n            following: false,\n            friends_count: this.faker.Number.between(1, 100000),\n            geo_enabled: this.faker.Boolean.boolean(0.1),\n            is_translation_enabled: this.faker.Boolean.boolean(0.1),\n            is_translator: this.faker.Boolean.boolean(0.1),\n            lang: this.faker.Address.countryCode(),\n            listed_count: this.faker.Number.between(1, 1000),\n            location: this.faker.Address.city() + \", \" + this.faker.Address.stateAbbr() + \", \" + this.faker.Address.countryCode(),\n            name: this.faker.Name.name(),\n            notifications: false,\n            profile_background_color: this.faker.Color.hexColor(),\n            profile_background_image_url_https: backgroundImageUrl,\n            profile_background_image_url: backgroundImageUrl.replace('https://', 'http://'),\n            profile_background_tile: this.faker.Boolean.boolean(0.1),\n            profile_banner_url: this.faker.LoremPixel.image('1500x500'),\n            profile_image_url_https: profileImageUrl,\n            profile_image_url: profileImageUrl.replace('https://', 'http://'),\n            profile_link_color: this.faker.Color.hexColor(),\n            profile_sidebar_border_color: this.faker.Color.hexColor(),\n            profile_sidebar_fill_color: this.faker.Color.hexColor(),\n            profile_text_color: this.faker.Color.hexColor(),\n            profile_use_background_image: this.faker.Boolean.boolean(0.4),\n            protected: this.faker.Boolean.boolean(0.1),\n            screen_name: this.screenName(),\n            status: includeStatus ? this.status(false) : undefined,\n            statuses_count: this.faker.Number.between(1, 100000),\n            time_zone: this.faker.Address.timeZone(),\n            url: 'http://example.com',\n            utc_offset: this.utcOffset(),\n            verified: this.faker.Boolean.boolean(0.1),\n        };\n        return user;\n    };\n    Twitter.prototype.status = function (includeUser, includePhoto) {\n        if (includeUser === void 0) { includeUser = true; }\n        if (includePhoto === void 0) { includePhoto = false; }\n        var statusId = this.faker.Number.between(1, 9223372036854775807);\n        var createdAt = this.faker.Date.between(new Date(2006, 2, 21), new Date());\n        var status = {\n            id: statusId,\n            id_str: \"\" + statusId,\n            contributors: null,\n            coordinates: null,\n            created_at: createdAt,\n            entities: this.statusEntities(includePhoto),\n            favourite_count: this.faker.Number.between(1, 10000),\n            favourited: false,\n            geo: null,\n            in_reply_to_screen_name: null,\n            in_reply_to_status_id: null,\n            in_reply_to_user_id_str: null,\n            in_reply_to_user_id: null,\n            is_quote_status: false,\n            lang: this.faker.Address.countryCode(),\n            nil: null,\n            place: null,\n            possibly_sensitive: this.faker.Boolean.boolean(0.1),\n            retweet_count: this.faker.Number.between(1, 10000),\n            retweeted_status: null,\n            retweeted: false,\n            source: \"<a href=\\\"\" + this.faker.Internet.url('example.com') + \"\\\" rel=\\\"nofollow\\\">\" + this.faker.Company.name + \"</a>\",\n            text: this.faker.Lorem.sentence(),\n            truncated: false,\n            user: includeUser ? this.user(false) : undefined,\n        };\n        if (includePhoto) {\n            status.text = status.text + \" \" + status.entities.media[0].url;\n        }\n        return status;\n    };\n    Twitter.prototype.screenName = function () {\n        return this.faker.Internet.userName().substring(0, 20);\n    };\n    Twitter.prototype.utcOffset = function () {\n        return this.faker.Number.between(-43200, 50400);\n    };\n    Twitter.prototype.userEntities = function () {\n        return {\n            url: {\n                urls: [],\n            },\n            description: {\n                urls: [],\n            },\n        };\n    };\n    Twitter.prototype.statusEntities = function (includePhoto) {\n        return {\n            hashtags: [],\n            symbols: [],\n            user_mentions: [],\n            urls: [],\n            media: includePhoto ? [this.photoEntity()] : [],\n        };\n    };\n    Twitter.prototype.photoEntity = function () {\n        var mediaUrl = this.faker.LoremPixel.image('1064x600');\n        var mediaId = this.faker.Number.between(1, 9223372036854775807);\n        return {\n            id: mediaId,\n            id_str: \"\" + mediaId,\n            indices: [103, 126],\n            media_url: mediaUrl.replace('https://', 'http://'),\n            media_url_https: mediaUrl,\n            url: this.faker.Internet.url('example.com'),\n            display_url: 'example.com',\n            expanded_url: this.faker.Internet.url('example.com'),\n            type: 'photo',\n            sizes: {\n                medium: {\n                    w: 1064,\n                    h: 600,\n                    resize: 'fit',\n                },\n                large: {\n                    w: 1064,\n                    h: 600,\n                    resize: 'fit',\n                },\n                small: {\n                    w: 680,\n                    h: 383,\n                    resize: 'fit',\n                },\n                thumb: {\n                    w: 150,\n                    h: 150,\n                    resize: 'crop',\n                },\n            },\n        };\n    };\n    return Twitter;\n}());\nexports.Twitter = Twitter;\n"]},"metadata":{},"sourceType":"script"}
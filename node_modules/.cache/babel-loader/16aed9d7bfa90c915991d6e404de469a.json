{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar bs58_1 = __importDefault(require(\"bs58\"));\n\nvar crypto_1 = __importDefault(require(\"crypto\"));\n\nvar Bitcoin =\n/** @class */\nfunction () {\n  function Bitcoin(faker) {\n    this.PROTOCOL_VERSION = {\n      main: 0,\n      testnet: 111\n    };\n    this.faker = faker;\n  }\n\n  Bitcoin.prototype.address = function () {\n    return this.addressFor(this.PROTOCOL_VERSION.main);\n  };\n\n  Bitcoin.prototype.testnetAddress = function () {\n    return this.addressFor(this.PROTOCOL_VERSION.testnet);\n  };\n\n  Bitcoin.prototype.addressFor = function (version) {\n    var packed = String.fromCharCode(version) + crypto_1.default.randomBytes(20);\n    var packedDigest = this.digest(packed);\n    var checksum = this.digest(packedDigest).slice(0, 3);\n    return this.base58(\"\" + packed + checksum);\n  };\n\n  Bitcoin.prototype.digest = function (text) {\n    var hash = crypto_1.default.createHash('sha256');\n    return hash.digest(text);\n  };\n\n  Bitcoin.prototype.base58 = function (text) {\n    return bs58_1.default.encode(new Buffer(text, 'ascii'));\n  };\n\n  return Bitcoin;\n}();\n\nexports.Bitcoin = Bitcoin;","map":{"version":3,"sources":["/Users/crystalligence/Desktop/pokedex/node_modules/fakergem/lib/faker/bitcoin.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","bs58_1","require","crypto_1","Bitcoin","faker","PROTOCOL_VERSION","main","testnet","prototype","address","addressFor","testnetAddress","version","packed","String","fromCharCode","default","randomBytes","packedDigest","digest","checksum","slice","base58","text","hash","createHash","encode","Buffer"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGP,eAAe,CAACQ,OAAO,CAAC,MAAD,CAAR,CAA5B;;AACA,IAAIC,QAAQ,GAAGT,eAAe,CAACQ,OAAO,CAAC,QAAD,CAAR,CAA9B;;AACA,IAAIE,OAAO;AAAG;AAAe,YAAY;AACrC,WAASA,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,SAAKC,gBAAL,GAAwB;AACpBC,MAAAA,IAAI,EAAE,CADc;AAEpBC,MAAAA,OAAO,EAAE;AAFW,KAAxB;AAIA,SAAKH,KAAL,GAAaA,KAAb;AACH;;AACDD,EAAAA,OAAO,CAACK,SAAR,CAAkBC,OAAlB,GAA4B,YAAY;AACpC,WAAO,KAAKC,UAAL,CAAgB,KAAKL,gBAAL,CAAsBC,IAAtC,CAAP;AACH,GAFD;;AAGAH,EAAAA,OAAO,CAACK,SAAR,CAAkBG,cAAlB,GAAmC,YAAY;AAC3C,WAAO,KAAKD,UAAL,CAAgB,KAAKL,gBAAL,CAAsBE,OAAtC,CAAP;AACH,GAFD;;AAGAJ,EAAAA,OAAO,CAACK,SAAR,CAAkBE,UAAlB,GAA+B,UAAUE,OAAV,EAAmB;AAC9C,QAAIC,MAAM,GAAIC,MAAM,CAACC,YAAP,CAAoBH,OAApB,IAA+BV,QAAQ,CAACc,OAAT,CAAiBC,WAAjB,CAA6B,EAA7B,CAA7C;AACA,QAAIC,YAAY,GAAG,KAAKC,MAAL,CAAYN,MAAZ,CAAnB;AACA,QAAIO,QAAQ,GAAG,KAAKD,MAAL,CAAYD,YAAZ,EAA0BG,KAA1B,CAAgC,CAAhC,EAAmC,CAAnC,CAAf;AACA,WAAO,KAAKC,MAAL,CAAY,KAAKT,MAAL,GAAcO,QAA1B,CAAP;AACH,GALD;;AAMAjB,EAAAA,OAAO,CAACK,SAAR,CAAkBW,MAAlB,GAA2B,UAAUI,IAAV,EAAgB;AACvC,QAAIC,IAAI,GAAGtB,QAAQ,CAACc,OAAT,CAAiBS,UAAjB,CAA4B,QAA5B,CAAX;AACA,WAAOD,IAAI,CAACL,MAAL,CAAYI,IAAZ,CAAP;AACH,GAHD;;AAIApB,EAAAA,OAAO,CAACK,SAAR,CAAkBc,MAAlB,GAA2B,UAAUC,IAAV,EAAgB;AACvC,WAAOvB,MAAM,CAACgB,OAAP,CAAeU,MAAf,CAAsB,IAAIC,MAAJ,CAAWJ,IAAX,EAAiB,OAAjB,CAAtB,CAAP;AACH,GAFD;;AAGA,SAAOpB,OAAP;AACH,CA5B4B,EAA7B;;AA6BAL,OAAO,CAACK,OAAR,GAAkBA,OAAlB","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bs58_1 = __importDefault(require(\"bs58\"));\nvar crypto_1 = __importDefault(require(\"crypto\"));\nvar Bitcoin = /** @class */ (function () {\n    function Bitcoin(faker) {\n        this.PROTOCOL_VERSION = {\n            main: 0,\n            testnet: 111,\n        };\n        this.faker = faker;\n    }\n    Bitcoin.prototype.address = function () {\n        return this.addressFor(this.PROTOCOL_VERSION.main);\n    };\n    Bitcoin.prototype.testnetAddress = function () {\n        return this.addressFor(this.PROTOCOL_VERSION.testnet);\n    };\n    Bitcoin.prototype.addressFor = function (version) {\n        var packed = (String.fromCharCode(version) + crypto_1.default.randomBytes(20));\n        var packedDigest = this.digest(packed);\n        var checksum = this.digest(packedDigest).slice(0, 3);\n        return this.base58(\"\" + packed + checksum);\n    };\n    Bitcoin.prototype.digest = function (text) {\n        var hash = crypto_1.default.createHash('sha256');\n        return hash.digest(text);\n    };\n    Bitcoin.prototype.base58 = function (text) {\n        return bs58_1.default.encode(new Buffer(text, 'ascii'));\n    };\n    return Bitcoin;\n}());\nexports.Bitcoin = Bitcoin;\n"]},"metadata":{},"sourceType":"script"}
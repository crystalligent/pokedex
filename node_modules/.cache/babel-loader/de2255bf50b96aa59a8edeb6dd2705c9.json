{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Avatar =\n/** @class */\nfunction () {\n  function Avatar(faker) {\n    this.SUPPORTED_FORMATS = ['png', 'jpg', 'bmp'];\n    this.faker = faker;\n  }\n\n  Avatar.prototype.image = function (slug, size, format, set, bgset) {\n    if (slug === void 0) {\n      slug = null;\n    }\n\n    if (size === void 0) {\n      size = '300x300';\n    }\n\n    if (format === void 0) {\n      format = 'png';\n    }\n\n    if (set === void 0) {\n      set = 'set1';\n    }\n\n    if (bgset === void 0) {\n      bgset = null;\n    }\n\n    if (!this.isValidSize(size)) {\n      throw new Error('Size should be specified in format 300x300');\n    }\n\n    if (!this.isFormatSupported(format)) {\n      throw new Error(\"Supported formats are \" + this.SUPPORTED_FORMATS.join(', '));\n    }\n\n    var filename = (slug || this.words()) + \".\" + format;\n    var bgsetQuery = bgset ? \"&bgset=\" + bgset : '';\n    return \"https://robohash.org/\" + filename + \"?size=\" + size + \"&set=\" + set + bgsetQuery;\n  };\n\n  Avatar.prototype.isValidSize = function (size) {\n    return /^\\d+x\\d+$/.test(size);\n  };\n\n  Avatar.prototype.isFormatSupported = function (format) {\n    return this.SUPPORTED_FORMATS.indexOf(format) >= 0;\n  };\n\n  Avatar.prototype.words = function () {\n    return this.faker.Lorem.words(3).join('-');\n  };\n\n  return Avatar;\n}();\n\nexports.Avatar = Avatar;","map":{"version":3,"sources":["/Users/crystalligence/Desktop/pokedex/node_modules/fakergem/lib/faker/avatar.js"],"names":["Object","defineProperty","exports","value","Avatar","faker","SUPPORTED_FORMATS","prototype","image","slug","size","format","set","bgset","isValidSize","Error","isFormatSupported","join","filename","words","bgsetQuery","test","indexOf","Lorem"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM;AAAG;AAAe,YAAY;AACpC,WAASA,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,SAAKC,iBAAL,GAAyB,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAAzB;AACA,SAAKD,KAAL,GAAaA,KAAb;AACH;;AACDD,EAAAA,MAAM,CAACG,SAAP,CAAiBC,KAAjB,GAAyB,UAAUC,IAAV,EAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AAC/D,QAAIJ,IAAI,KAAK,KAAK,CAAlB,EAAqB;AAAEA,MAAAA,IAAI,GAAG,IAAP;AAAc;;AACrC,QAAIC,IAAI,KAAK,KAAK,CAAlB,EAAqB;AAAEA,MAAAA,IAAI,GAAG,SAAP;AAAmB;;AAC1C,QAAIC,MAAM,KAAK,KAAK,CAApB,EAAuB;AAAEA,MAAAA,MAAM,GAAG,KAAT;AAAiB;;AAC1C,QAAIC,GAAG,KAAK,KAAK,CAAjB,EAAoB;AAAEA,MAAAA,GAAG,GAAG,MAAN;AAAe;;AACrC,QAAIC,KAAK,KAAK,KAAK,CAAnB,EAAsB;AAAEA,MAAAA,KAAK,GAAG,IAAR;AAAe;;AACvC,QAAI,CAAC,KAAKC,WAAL,CAAiBJ,IAAjB,CAAL,EAA6B;AACzB,YAAM,IAAIK,KAAJ,CAAU,4CAAV,CAAN;AACH;;AACD,QAAI,CAAC,KAAKC,iBAAL,CAAuBL,MAAvB,CAAL,EAAqC;AACjC,YAAM,IAAII,KAAJ,CAAU,2BAA2B,KAAKT,iBAAL,CAAuBW,IAAvB,CAA4B,IAA5B,CAArC,CAAN;AACH;;AACD,QAAIC,QAAQ,GAAG,CAACT,IAAI,IAAI,KAAKU,KAAL,EAAT,IAAyB,GAAzB,GAA+BR,MAA9C;AACA,QAAIS,UAAU,GAAGP,KAAK,GAAG,YAAYA,KAAf,GAAuB,EAA7C;AACA,WAAO,0BAA0BK,QAA1B,GAAqC,QAArC,GAAgDR,IAAhD,GAAuD,OAAvD,GAAiEE,GAAjE,GAAuEQ,UAA9E;AACH,GAfD;;AAgBAhB,EAAAA,MAAM,CAACG,SAAP,CAAiBO,WAAjB,GAA+B,UAAUJ,IAAV,EAAgB;AAC3C,WAAO,YAAYW,IAAZ,CAAiBX,IAAjB,CAAP;AACH,GAFD;;AAGAN,EAAAA,MAAM,CAACG,SAAP,CAAiBS,iBAAjB,GAAqC,UAAUL,MAAV,EAAkB;AACnD,WAAO,KAAKL,iBAAL,CAAuBgB,OAAvB,CAA+BX,MAA/B,KAA0C,CAAjD;AACH,GAFD;;AAGAP,EAAAA,MAAM,CAACG,SAAP,CAAiBY,KAAjB,GAAyB,YAAY;AACjC,WAAO,KAAKd,KAAL,CAAWkB,KAAX,CAAiBJ,KAAjB,CAAuB,CAAvB,EAA0BF,IAA1B,CAA+B,GAA/B,CAAP;AACH,GAFD;;AAGA,SAAOb,MAAP;AACH,CA/B2B,EAA5B;;AAgCAF,OAAO,CAACE,MAAR,GAAiBA,MAAjB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Avatar = /** @class */ (function () {\n    function Avatar(faker) {\n        this.SUPPORTED_FORMATS = ['png', 'jpg', 'bmp'];\n        this.faker = faker;\n    }\n    Avatar.prototype.image = function (slug, size, format, set, bgset) {\n        if (slug === void 0) { slug = null; }\n        if (size === void 0) { size = '300x300'; }\n        if (format === void 0) { format = 'png'; }\n        if (set === void 0) { set = 'set1'; }\n        if (bgset === void 0) { bgset = null; }\n        if (!this.isValidSize(size)) {\n            throw new Error('Size should be specified in format 300x300');\n        }\n        if (!this.isFormatSupported(format)) {\n            throw new Error(\"Supported formats are \" + this.SUPPORTED_FORMATS.join(', '));\n        }\n        var filename = (slug || this.words()) + \".\" + format;\n        var bgsetQuery = bgset ? \"&bgset=\" + bgset : '';\n        return \"https://robohash.org/\" + filename + \"?size=\" + size + \"&set=\" + set + bgsetQuery;\n    };\n    Avatar.prototype.isValidSize = function (size) {\n        return /^\\d+x\\d+$/.test(size);\n    };\n    Avatar.prototype.isFormatSupported = function (format) {\n        return this.SUPPORTED_FORMATS.indexOf(format) >= 0;\n    };\n    Avatar.prototype.words = function () {\n        return this.faker.Lorem.words(3).join('-');\n    };\n    return Avatar;\n}());\nexports.Avatar = Avatar;\n"]},"metadata":{},"sourceType":"script"}
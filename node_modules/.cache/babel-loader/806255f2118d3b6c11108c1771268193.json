{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/crystalligence/Desktop/pokedex/src/Pokedex.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { AppBar, Toolbar, Grid, Card, CardMedia, CardContent, CircularProgress, Typography, TextField } from \"@material-ui/core\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport { toFirstCharUppercase } from \"./constants\";\nimport axios from \"axios\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nconst useStyles = makeStyles(theme => ({\n  pokedexContainer: {\n    paddingTop: \"20px\",\n    paddingLeft: \"50px\",\n    paddingRight: \"50px\"\n  },\n  cardMedia: {\n    margin: \"auto\"\n  },\n  cardContent: {\n    textAlign: \"center\"\n  },\n  searchContainer: {\n    display: \"flex\",\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n    borderRadius: \"5px\"\n  },\n  searchIcon: {\n    alignSelf: \"flex-end\",\n    marginBottom: \"5px\"\n  },\n  searchInput: {\n    width: \"200px\",\n    margin: \"5px\"\n  }\n}));\n\nconst Pokedex = props => {\n  _s();\n\n  const {\n    history\n  } = props;\n  const classes = useStyles();\n  const [pokemonData, setPokemonData] = useState();\n  useEffect(() => {\n    axios.get(`https://pokeapi.co/api/v2/pokemon?limit=100`).then(function (response) {\n      const {\n        data\n      } = response;\n      const {\n        results\n      } = data;\n      const newPokemonData = {};\n      results.forEach((pokemon, index) => {\n        newPokemonData[index + 1] = {\n          id: index + 1,\n          name: pokemon.name,\n          sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index + 1}.png`\n        };\n      });\n      setPokemonData(newPokemonData);\n    });\n  }, []);\n\n  const getPokemonCard = pokemonId => {\n    const {\n      id,\n      name,\n      sprite\n    } = pokemonData[pokemonId];\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 4,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        onClick: () => history.push(`/${pokemonId}`),\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          className: classes.cardMedia,\n          image: sprite,\n          style: {\n            width: \"130px\",\n            height: \"130px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: classes.cardContent,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: `${id}. ${toFirstCharUppercase(name)}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, pokemonId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.searchContainer,\n          children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n            className: classes.searchIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            className: classes.searchInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), pokemonData ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      className: classes.pokedexContainer,\n      children: Object.keys(pokemonData).map(pokemonId => getPokemonCard(pokemonId))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Pokedex, \"7/tApn44EFV+s1aKgmXt8gUWshQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = Pokedex;\nexport default Pokedex;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokedex\");","map":{"version":3,"sources":["/Users/crystalligence/Desktop/pokedex/src/Pokedex.js"],"names":["React","useEffect","useState","AppBar","Toolbar","Grid","Card","CardMedia","CardContent","CircularProgress","Typography","TextField","fade","makeStyles","toFirstCharUppercase","axios","SearchIcon","useStyles","theme","pokedexContainer","paddingTop","paddingLeft","paddingRight","cardMedia","margin","cardContent","textAlign","searchContainer","display","backgroundColor","palette","common","white","marginTop","marginBottom","borderRadius","searchIcon","alignSelf","searchInput","width","Pokedex","props","history","classes","pokemonData","setPokemonData","get","then","response","data","results","newPokemonData","forEach","pokemon","index","id","name","sprite","getPokemonCard","pokemonId","push","height","Object","keys","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { \n    AppBar, \n    Toolbar, \n    Grid, \n    Card, \n    CardMedia,\n    CardContent, \n    CircularProgress,\n    Typography,\n    TextField,\n} from \"@material-ui/core\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport { toFirstCharUppercase } from \"./constants\";\nimport axios from \"axios\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles(theme => ({\n    pokedexContainer: {\n      paddingTop: \"20px\",\n      paddingLeft: \"50px\",\n      paddingRight: \"50px\",\n    },\n    cardMedia: {\n      margin: \"auto\",\n    },\n    cardContent: {\n      textAlign: \"center\",\n    },\n    searchContainer: {\n      display: \"flex\",\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      marginTop: \"5px\",\n      marginBottom: \"5px\",\n      borderRadius: \"5px\",\n    },\n    searchIcon: {\n      alignSelf: \"flex-end\",\n      marginBottom: \"5px\",\n    },\n    searchInput: {\n      width: \"200px\",\n      margin: \"5px\",\n    },\n}));\n\nconst Pokedex = (props) => {\n  const { history } = props;\n  const classes = useStyles();\n  const [pokemonData, setPokemonData] = useState();\n\n  useEffect(() => {\n    axios \n      .get(`https://pokeapi.co/api/v2/pokemon?limit=100`)\n      .then(function (response) {\n        const { data } = response;\n        const { results } = data;\n        const newPokemonData = {};\n        results.forEach((pokemon, index) => {\n          newPokemonData[index + 1] = {\n            id: index + 1,\n            name: pokemon.name,\n            sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${\n              index + 1\n              }.png`,\n          };\n        });\n        setPokemonData(newPokemonData);\n      });\n  }, [])\n\n  const getPokemonCard = (pokemonId) => {\n    const { id, name, sprite } = pokemonData[pokemonId];\n    return (\n      <Grid item xs= {4} key={pokemonId}>\n        <Card onClick = {() => history.push(`/${pokemonId}`)} >\n            <CardMedia \n              className = {classes.cardMedia}\n              image= {sprite}\n              style= {{ width: \"130px\", height: \"130px\" }}\n            />\n          <CardContent className={classes.cardContent}>\n            <Typography>{`${id}. ${toFirstCharUppercase(name)}`}</Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar> \n          <div className = { classes.searchContainer }>\n            <SearchIcon  className = { classes.searchIcon } />\n            <TextField className = { classes.searchInput } />\n          </div> \n        </Toolbar>\n      </AppBar>\n      {pokemonData ? (\n        <Grid container spacing={2} className={ classes.pokedexContainer}>\n        {Object.keys(pokemonData).map((pokemonId) => \n            getPokemonCard(pokemonId)\n            )}\n        </Grid>\n      ) : (\n          <CircularProgress />\n      )}\n    </>\n  );\n};\n\nexport default Pokedex"]},"metadata":{},"sourceType":"module"}
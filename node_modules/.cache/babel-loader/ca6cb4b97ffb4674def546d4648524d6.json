{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/crystalligence/Desktop/pokedex/src/Pokemon.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Typography, CircularProgress, Button } from \"@material-ui/core\";\nimport { toFirstCharUppercase } from \"./constants\";\nimport axios from \"axios\";\n\nconst Pokemon = props => {\n  _s();\n\n  const {\n    history,\n    match\n  } = props;\n  const {\n    params\n  } = match;\n  const {\n    pokemonId\n  } = params;\n  const [pokemon, setPokemon] = useState(undefined);\n  useEffect(() => {\n    axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}/`).then(function (response) {\n      const {\n        data\n      } = response;\n      setPokemon(data);\n    }).catch(function (error) {\n      setPokemon(false);\n    });\n  }, [pokemonId]);\n\n  const generatePokemonJSX = () => {\n    const {\n      name,\n      id,\n      species,\n      height,\n      weight,\n      types,\n      sprites\n    } = pokemon;\n    const fullImageUrl = `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\n    const {\n      front_default\n    } = sprites;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h1\",\n        children: [`${id}.`, \" \", toFirstCharUppercase(name), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: front_default\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: \"300px\",\n          height: \"300px\"\n        },\n        src: fullImageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \" Pokemon Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Species: \", species.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Height: \", height]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Weight: \", weight]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \" Types:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), types.map(typeInfo => {\n        const {\n          type\n        } = typeInfo;\n        const {\n          name\n        } = type;\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\" \", `${name}`]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [pokemon === undefined && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 31\n    }, this), pokemon !== undefined && pokemon && generatePokemonJSX(), pokemon === false && /*#__PURE__*/_jsxDEV(Typography, {\n      children: \" Pokemon not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 27\n    }, this), pokemon !== undefined && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => history.push(\"/\"),\n      children: \"back to pokedex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Pokemon, \"5RlIBupmaXeLRXK3uCwYnX00xBs=\");\n\n_c = Pokemon;\nexport default Pokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"sources":["/Users/crystalligence/Desktop/pokedex/src/Pokemon.js"],"names":["React","useState","Typography","CircularProgress","Button","toFirstCharUppercase","axios","Pokemon","props","history","match","params","pokemonId","pokemon","setPokemon","undefined","useEffect","get","then","response","data","catch","error","generatePokemonJSX","name","id","species","height","weight","types","sprites","fullImageUrl","front_default","width","map","typeInfo","type","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Typography, CircularProgress, Button } from \"@material-ui/core\";\nimport { toFirstCharUppercase } from \"./constants\";\nimport axios from \"axios\";\n\nconst Pokemon = (props) => {\n  const { history, match } = props;\n  const { params } = match;\n  const { pokemonId } = params;\n  const [pokemon, setPokemon] = useState(undefined)\n\n  useEffect(() => {\n    axios \n    .get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}/`)\n    .then(function (response) {\n      const { data } = response;\n      setPokemon(data);\n    })\n    .catch(function (error) {\n      setPokemon(false);\n    });\n  }, [pokemonId]);\n\n  const generatePokemonJSX = () => {\n    const { name, id, species, height, weight, types, sprites } = pokemon;\n    const fullImageUrl = `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\n    const { front_default } = sprites;\n    return (\n      <>\n        <Typography variant = \"h1\">\n          {`${id}.`} {toFirstCharUppercase(name)}\n          <img src={front_default} />\n        </Typography>\n        <img style={{ width: \"300px\", height: \"300px\" }} src={ fullImageUrl} />\n        <Typography variant=\"h3\"> Pokemon Info</Typography>\n        <Typography>Species: {species.name}</Typography>\n        <Typography>Height: {height}</Typography>\n        <Typography>Weight: {weight}</Typography>\n        <Typography variant=\"h6\"> Types:</Typography>\n        {types.map((typeInfo) => {\n          const { type } = typeInfo;\n          const { name } = type;\n          return <Typography key={name}> {`${name}`}</Typography>;\n        })}\n      </>\n    );\n  }\n  return ( <> \n    {pokemon === undefined && <CircularProgress />}\n    {pokemon !== undefined && pokemon && generatePokemonJSX()}\n    {pokemon === false && <Typography> Pokemon not found</Typography>}\n    {pokemon !== undefined && (\n      <Button variant = \"contained\" onClick={() => history.push(\"/\")}>\n       back to pokedex\n      </Button>\n    )}\n  </>);\n\n};\n\nexport default Pokemon"]},"metadata":{},"sourceType":"module"}
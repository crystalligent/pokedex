{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/crystalligence/Desktop/pokedex/src/show_pokemon.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Button } from 'react-bootstrap';\n\nconst {\n  Faker\n} = require('fakergem');\n\nclass ShowPokemon extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pokemon: {}\n    };\n\n    this.randomPokemon = () => {\n      this.fetchPokemon(Faker.Pokemon.name().toLowerCase());\n    };\n  }\n\n  fetchPokemon(pokemon) {\n    fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon}`).then(res => res.json()).then(data => this.setState({\n      pokemon: data\n    })).catch(error => console.log(error));\n  }\n\n  componentDidMount() {\n    this.fetchPokemon('pikachu');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: style.pokeCard,\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          src: this.state.pokemon.sprites ? this.state.pokemon.sprites['front_default'] : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"Who's that Pokemon?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\"It's \", this.state.pokemon.name, \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: this.randomPokemon,\n            children: \"Randomize Pokemon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst style = {\n  pokeCard: {\n    textAlign: 'center',\n    width: 300,\n    margin: 30,\n    border: 'solid',\n    borderRadius: 10\n  }\n};\nexport default ShowPokemon;","map":{"version":3,"sources":["/Users/crystalligence/Desktop/pokedex/src/show_pokemon.js"],"names":["React","Card","Button","Faker","require","ShowPokemon","Component","state","pokemon","randomPokemon","fetchPokemon","Pokemon","name","toLowerCase","fetch","then","res","json","data","setState","catch","error","console","log","componentDidMount","render","style","pokeCard","sprites","textAlign","width","margin","border","borderRadius"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sCAAP;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAYC,OAAO,CAAC,UAAD,CAAzB;;AAEA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AAAA;AAAA;AAAA,SAExCC,KAFwC,GAEhC;AACNC,MAAAA,OAAO,EAAE;AADH,KAFgC;;AAAA,SAaxCC,aAbwC,GAaxB,MAAM;AACrB,WAAKC,YAAL,CAAkBP,KAAK,CAACQ,OAAN,CAAcC,IAAd,GAAqBC,WAArB,EAAlB;AACA,KAfuC;AAAA;;AAMxCH,EAAAA,YAAY,CAACF,OAAD,EAAU;AACpBM,IAAAA,KAAK,CAAE,qCAAoCN,OAAQ,EAA9C,CAAL,CACGO,IADH,CACUC,GAAG,IAAMA,GAAG,CAACC,IAAJ,EADnB,EAEGF,IAFH,CAEUG,IAAI,IAAK,KAAKC,QAAL,CAAc;AAAEX,MAAAA,OAAO,EAAEU;AAAX,KAAd,CAFnB,EAGGE,KAHH,CAGUC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHnB;AAID;;AAMDG,EAAAA,iBAAiB,GAAE;AACjB,SAAKd,YAAL,CAAkB,SAAlB;AACD;;AAEDe,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,KAAK,CAACC,QAAnB;AAAA,gCACE,QAAC,IAAD,CAAM,GAAN;AAAU,UAAA,OAAO,EAAC,KAAlB;AAAwB,UAAA,GAAG,EAAG,KAAKpB,KAAL,CAAWC,OAAX,CAAmBoB,OAAnB,GAA6B,KAAKrB,KAAL,CAAWC,OAAX,CAAmBoB,OAAnB,CAA2B,eAA3B,CAA7B,GAA2E;AAAzG;AAAA;AAAA;AAAA;AAAA,gBADF,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,kCACA,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAEA,QAAC,IAAD,CAAM,IAAN;AAAA,gCACS,KAAKrB,KAAL,CAAWC,OAAX,CAAmBI,IAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAKA,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,QAAhB;AAAyB,YAAA,OAAO,EAAG,KAAKH,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAcD;;AApCuC;;AAuC1C,MAAMiB,KAAK,GAAG;AACZC,EAAAA,QAAQ,EAAE;AACRE,IAAAA,SAAS,EAAE,QADH;AAERC,IAAAA,KAAK,EAAC,GAFE;AAGRC,IAAAA,MAAM,EAAE,EAHA;AAIRC,IAAAA,MAAM,EAAE,OAJA;AAKRC,IAAAA,YAAY,EAAE;AALN;AADE,CAAd;AASA,eAAe5B,WAAf","sourcesContent":["import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Card, Button } from 'react-bootstrap'\nconst { Faker } = require('fakergem')\n\nclass ShowPokemon extends React.Component {\n\n  state = {\n    pokemon: {}\n  }\n\n  fetchPokemon(pokemon) {\n    fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon}`)\n      .then(  res   => res.json() )\n      .then(  data  => this.setState({ pokemon: data}) )\n      .catch( error => console.log(error) )\n  }\n\n  randomPokemon = () => {\n   this.fetchPokemon(Faker.Pokemon.name().toLowerCase())\n  }\n\n  componentDidMount(){\n    this.fetchPokemon('pikachu')\n  }\n\n  render() {\n    return (\n      <>\n        <Card style={style.pokeCard}>\n          <Card.Img variant=\"top\" src={ this.state.pokemon.sprites ? this.state.pokemon.sprites['front_default'] : null } />\n            <Card.Body>\n            <Card.Title>Who's that Pokemon?</Card.Title>\n            <Card.Text>\n              It's { this.state.pokemon.name }!\n            </Card.Text>\n            <Button variant=\"danger\" onClick={ this.randomPokemon }>Randomize Pokemon</Button>\n          </Card.Body>\n        </Card>\n      </>\n    )\n  }\n}\n\nconst style = {\n  pokeCard: {\n    textAlign: 'center',\n    width:300,\n    margin: 30,\n    border: 'solid',\n    borderRadius: 10\n  }\n}\nexport default ShowPokemon\n"]},"metadata":{},"sourceType":"module"}
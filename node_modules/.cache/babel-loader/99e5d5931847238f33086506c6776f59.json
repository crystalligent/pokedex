{"ast":null,"code":"import _slicedToArray from\"/Users/crystalligence/Desktop/pokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useEffect,useState}from'react';import{AppBar,Toolbar,Grid,Card,CardMedia,CardContent,CircularProgress,Typography,TextField}from\"@material-ui/core\";import{fade,makeStyles}from\"@material-ui/core/styles\";import{toFirstCharUppercase}from\"./constants\";import axios from\"axios\";import SearchIcon from\"@material-ui/icons/Search\";var useStyles=makeStyles(function(theme){return{pokedexContainer:{paddingTop:\"100px\",paddingLeft:\"50px\",paddingRight:\"50px\"},cardMedia:{margin:\"auto\"},cardContent:{textAlign:\"center\"},searchContainer:{display:\"flex\",backgroundColor:fade(theme.palette.common.white,0.15),paddingLeft:\"20px\",paddingRight:\"20px\",marginTop:\"5px\",marginBottom:\"5px\",borderRadius:\"25px\",margin:\"auto\"},searchIcon:{alignSelf:\"flex-end\",marginBottom:\"5px\"},searchInput:{width:\"200px\",margin:\"5px\"}};});var Pokedex=function Pokedex(props){var history=props.history;var classes=useStyles();var _useState=useState(),_useState2=_slicedToArray(_useState,2),pokemonData=_useState2[0],setPokemonData=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),filter=_useState4[0],setFilter=_useState4[1];var handleSearchChange=function handleSearchChange(e){setFilter(e.target.value);};useEffect(function(){axios.get(\"https://pokeapi.co/api/v2/pokemon?limit=100\").then(function(response){var data=response.data;var results=data.results;var newPokemonData={};results.forEach(function(pokemon,index){newPokemonData[index+1]={id:index+1,name:pokemon.name,sprite:\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\".concat(index+1,\".png\")};});setPokemonData(newPokemonData);});},[]);var getPokemonCard=function getPokemonCard(pokemonId){var _pokemonData$pokemonI=pokemonData[pokemonId],id=_pokemonData$pokemonI.id,name=_pokemonData$pokemonI.name,sprite=_pokemonData$pokemonI.sprite;return/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsxs(Card,{onClick:function onClick(){return history.push(\"/pokedex/\".concat(pokemonId));},children:[/*#__PURE__*/_jsx(CardMedia,{className:classes.cardMedia,image:sprite,style:{width:\"130px\",height:\"130px\"}}),/*#__PURE__*/_jsx(CardContent,{className:classes.cardContent,children:/*#__PURE__*/_jsx(Typography,{children:\"\".concat(id,\". \").concat(toFirstCharUppercase(name))})})]})},pokemonId);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(AppBar,{position:\"fixed\",children:/*#__PURE__*/_jsx(Toolbar,{children:/*#__PURE__*/_jsxs(\"div\",{className:classes.searchContainer,children:[/*#__PURE__*/_jsx(SearchIcon,{className:classes.searchIcon}),/*#__PURE__*/_jsx(TextField,{onChange:handleSearchChange,className:classes.searchInput,label:\"Pokemon\",variant:\"standard\"})]})})}),pokemonData?/*#__PURE__*/_jsx(Grid,{container:true,spacing:2,className:classes.pokedexContainer,children:Object.keys(pokemonData).map(function(pokemonId){return pokemonData[pokemonId].name.includes(filter)&&getPokemonCard(pokemonId);})}):/*#__PURE__*/_jsx(CircularProgress,{})]});};export default Pokedex;","map":{"version":3,"sources":["/Users/crystalligence/Desktop/pokedex/src/Pokedex.js"],"names":["React","useEffect","useState","AppBar","Toolbar","Grid","Card","CardMedia","CardContent","CircularProgress","Typography","TextField","fade","makeStyles","toFirstCharUppercase","axios","SearchIcon","useStyles","theme","pokedexContainer","paddingTop","paddingLeft","paddingRight","cardMedia","margin","cardContent","textAlign","searchContainer","display","backgroundColor","palette","common","white","marginTop","marginBottom","borderRadius","searchIcon","alignSelf","searchInput","width","Pokedex","props","history","classes","pokemonData","setPokemonData","filter","setFilter","handleSearchChange","e","target","value","get","then","response","data","results","newPokemonData","forEach","pokemon","index","id","name","sprite","getPokemonCard","pokemonId","push","height","Object","keys","map","includes"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { \n    AppBar, \n    Toolbar, \n    Grid, \n    Card, \n    CardMedia,\n    CardContent, \n    CircularProgress,\n    Typography,\n    TextField,\n} from \"@material-ui/core\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport { toFirstCharUppercase } from \"./constants\";\nimport axios from \"axios\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles(theme => ({\n    pokedexContainer: {\n      paddingTop: \"100px\",\n      paddingLeft: \"50px\",\n      paddingRight: \"50px\",\n    },\n    cardMedia: {\n      margin: \"auto\",\n    },\n    cardContent: {\n      textAlign: \"center\",\n    },\n    searchContainer: {\n      display: \"flex\",\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      marginTop: \"5px\",\n      marginBottom: \"5px\",\n      borderRadius: \"25px\",\n      margin: \"auto\",\n    },\n    searchIcon: {\n      alignSelf: \"flex-end\",\n      marginBottom: \"5px\",\n    },\n    searchInput: {\n      width: \"200px\",\n      margin: \"5px\",\n    },\n}));\n\nconst Pokedex = (props) => {\n  const { history } = props;\n  const classes = useStyles();\n  const [pokemonData, setPokemonData] = useState();\n  const [filter, setFilter] = useState(\"\");\n\n  const handleSearchChange = (e) => {\n    setFilter(e.target.value);\n  }\n\n  useEffect(() => {\n    axios \n      .get(`https://pokeapi.co/api/v2/pokemon?limit=100`)\n      .then(function (response) {\n        const { data } = response;\n        const { results } = data;\n        const newPokemonData = {};\n        results.forEach((pokemon, index) => {\n          newPokemonData[index + 1] = {\n            id: index + 1,\n            name: pokemon.name,\n            sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${\n              index + 1\n              }.png`,\n          };\n        });\n        setPokemonData(newPokemonData);\n      });\n  }, [])\n\n  const getPokemonCard = (pokemonId) => {\n    const { id, name, sprite } = pokemonData[pokemonId];\n    return (\n      <Grid item xs= {4} key={pokemonId}>\n        <Card onClick = {() => history.push(`/pokedex/${pokemonId}`)} >\n            <CardMedia \n              className = {classes.cardMedia}\n              image= {sprite}\n              style= {{ width: \"130px\", height: \"130px\" }}\n            />\n          <CardContent className={classes.cardContent}>\n            <Typography>{`${id}. ${toFirstCharUppercase(name)}`}</Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <AppBar position=\"fixed\">\n        <Toolbar> \n          <div className = { classes.searchContainer }>\n            <SearchIcon  className = { classes.searchIcon } />\n            <TextField \n              onChange = { handleSearchChange }\n              className = { classes.searchInput } \n              label = \"Pokemon\"\n              variant = \"standard\"\n            />\n          </div> \n        </Toolbar>\n      </AppBar>\n      {pokemonData ? (\n        <Grid container spacing={2} className={ classes.pokedexContainer}>\n          {Object.keys(pokemonData).map((pokemonId) => \n            pokemonData[pokemonId].name.includes(filter) &&\n              getPokemonCard(pokemonId)\n            )}\n        </Grid>\n      ) : (\n          <CircularProgress />\n      )}\n    </>\n  );\n};\n\nexport default Pokedex"]},"metadata":{},"sourceType":"module"}
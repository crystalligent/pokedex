{"version":3,"sources":["constants.js","Pokedex.js","Pokemon.js","App.js","index.js"],"names":["toFirstCharUppercase","name","charAt","toUpperCase","slice","useStyles","makeStyles","theme","pokedexContainer","paddingTop","paddingLeft","paddingRight","cardMedia","margin","cardContent","textAlign","searchContainer","display","backgroundColor","fade","palette","common","white","marginTop","marginBottom","borderRadius","searchIcon","alignSelf","searchInput","width","Pokedex","props","history","classes","useState","pokemonData","setPokemonData","filter","setFilter","useEffect","axios","get","then","response","results","data","newPokemonData","forEach","pokemon","index","id","sprite","AppBar","position","Toolbar","className","TextField","onChange","e","target","value","label","variant","Grid","container","spacing","Object","keys","map","pokemonId","includes","item","xs","Card","onClick","push","CardMedia","image","style","height","CardContent","Typography","getPokemonCard","CircularProgress","root","maxWidth","media","avatar","red","backButton","alignItems","table","minWidth","Pokemon","match","params","undefined","setPokemon","catch","error","species","weight","sprites","fullImageUrl","front_default","createData","calories","rows","aria-label","title","component","Paper","row","scope","align","generatePokemonJSX","justify","App","exact","path","render","createBrowserHistory","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ef45fef.chunk.js","sourcesContent":["export const toFirstCharUppercase = name =>\nname.charAt(0).toUpperCase() + name.slice(1);","import React, { useEffect, useState } from 'react';\nimport { \n    AppBar, \n    Toolbar, \n    Grid, \n    Card, \n    CardMedia,\n    CardContent, \n    CircularProgress,\n    Typography,\n    TextField,\n} from \"@material-ui/core\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport { toFirstCharUppercase } from \"./constants\";\nimport axios from \"axios\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles(theme => ({\n    pokedexContainer: {\n      paddingTop: \"100px\",\n      paddingLeft: \"50px\",\n      paddingRight: \"50px\",\n    },\n    cardMedia: {\n      margin: \"auto\",\n    },\n    cardContent: {\n      textAlign: \"center\",\n    },\n    searchContainer: {\n      display: \"flex\",\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      marginTop: \"5px\",\n      marginBottom: \"5px\",\n      borderRadius: \"25px\",\n      margin: \"auto\",\n    },\n    searchIcon: {\n      alignSelf: \"flex-end\",\n      marginBottom: \"5px\",\n    },\n    searchInput: {\n      width: \"200px\",\n      margin: \"5px\",\n    },\n}));\n\nconst Pokedex = (props) => {\n  const { history } = props;\n  const classes = useStyles();\n  const [pokemonData, setPokemonData] = useState();\n  const [filter, setFilter] = useState(\"\");\n\n  const handleSearchChange = (e) => {\n    setFilter(e.target.value);\n  }\n\n  useEffect(() => {\n    axios \n      .get(`https://pokeapi.co/api/v2/pokemon?limit=100`)\n      .then(function (response) {\n        const { data } = response;\n        const { results } = data;\n        const newPokemonData = {};\n        results.forEach((pokemon, index) => {\n          newPokemonData[index + 1] = {\n            id: index + 1,\n            name: pokemon.name,\n            sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${\n              index + 1\n              }.png`,\n          };\n        });\n        setPokemonData(newPokemonData);\n      });\n  }, [])\n\n  const getPokemonCard = (pokemonId) => {\n    const { id, name, sprite } = pokemonData[pokemonId];\n    return (\n      <Grid item xs= {4} key={pokemonId}>\n        <Card onClick = {() => history.push(`/${pokemonId}`)} >\n            <CardMedia \n              className = {classes.cardMedia}\n              image= {sprite}\n              style= {{ width: \"130px\", height: \"130px\" }}\n            />\n          <CardContent className={classes.cardContent}>\n            <Typography>{`${id}. ${toFirstCharUppercase(name)}`}</Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <AppBar position=\"fixed\">\n        <Toolbar> \n          <div className = { classes.searchContainer }>\n            <SearchIcon  className = { classes.searchIcon } />\n            <TextField \n              onChange = { handleSearchChange }\n              className = { classes.searchInput } \n              label = \"Pokemon\"\n              variant = \"standard\"\n            />\n          </div> \n        </Toolbar>\n      </AppBar>\n      {pokemonData ? (\n        <Grid container spacing={2} className={ classes.pokedexContainer}>\n          {Object.keys(pokemonData).map((pokemonId) => \n            pokemonData[pokemonId].name.includes(filter) &&\n              getPokemonCard(pokemonId)\n            )}\n        </Grid>\n      ) : (\n          <CircularProgress />\n      )}\n    </>\n  );\n};\n\nexport default Pokedex","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as Mui from '@material-ui/core';\nimport { toFirstCharUppercase } from \"./constants\";\nimport axios from \"axios\";\nimport Paper from '@material-ui/core/Paper';\nimport { red } from '@material-ui/core/colors';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      paddingTop: \"20px\",\n      maxWidth: 700,\n      margin: \"auto\",\n    },\n    container: {\n      paddingTop: \"20px\",\n    },\n    media: {\n      margin: \"auto\",\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    backButton: {\n      alignItems: \"right\",\n    },\n    table: {\n        minWidth: 650,\n    },\n}));\n\nconst Pokemon = (props) => {\n  const classes = useStyles();\n  const { history, match } = props;\n  const { params } = match;\n  const { pokemonId } = params;\n  const [pokemon, setPokemon] = useState(undefined)\n\n  useEffect(() => {\n    axios \n    .get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}/`)\n    .then(function (response) {\n      const { data } = response;\n      setPokemon(data);\n    })\n    .catch(function (error) {\n      setPokemon(false);\n    });\n  }, [pokemonId]);\n\n  const generatePokemonJSX = () => {\n    const { name, id, species, height, weight, sprites } = pokemon;\n    const fullImageUrl = `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\n    const { front_default } = sprites;\n\n    function createData(name, calories) {\n        return { name, calories};\n    }\n      \n      const rows = [\n        createData('Species', `${species.name}` ),\n        createData('Height', `${height}`),\n        createData('Weight', `${weight}`),\n      ];\n\n    return (\n      <>\n       <div className = { classes.container }>\n        <Mui.Card className={classes.root}>\n        <Mui.CardHeader\n            avatar={\n            <Mui.Avatar aria-label=\"recipe\" className={classes.avatar}>\n                { name.charAt(0) }\n            </Mui.Avatar>\n            }\n            title={\n            <Mui.Typography component=\"h5\" variant=\"h5\">\n              {toFirstCharUppercase(name)}\n            </Mui.Typography>\n            }\n        />\n        <Mui.CardMedia\n            className={classes.media}\n            image={ fullImageUrl} \n            style= {{ width: \"350px\", height: \"350px\" }}\n        />\n        <Mui.CardContent />\n        <Mui.TableContainer component={Paper}>\n            <Mui.Table className={classes.table} aria-label=\"simple table\">\n                <Mui.TableBody>\n                    {rows.map((row) => (\n                        <Mui.TableRow key={row.name}>\n                        <Mui.TableCell component=\"th\" scope=\"row\">\n                            {row.name}\n                        </Mui.TableCell>\n                        <Mui.TableCell align=\"left\">{row.calories}</Mui.TableCell>\n                        </Mui.TableRow>\n                    ))}\n                </Mui.TableBody>\n            </Mui.Table>\n        </Mui.TableContainer>\n        </Mui.Card>\n       </div>\n      </>\n    );\n  }\n  return ( <> \n    {pokemon === undefined && <Mui.CircularProgress />}\n    {pokemon !== undefined && pokemon && generatePokemonJSX()}\n    {pokemon === false && <Mui.Typography> Pokemon not found</Mui.Typography>}\n    {pokemon !== undefined && (\n      <Mui.Grid container justify=\"flex-end\">\n        <Mui.Button variant = \"contained\" \n        onClick={() => history.push(\"/\")}>\n        back to pokedex\n        </Mui.Button>\n      </Mui.Grid>\n    )}\n  </>);\n\n};\n\nexport default Pokemon","import React from 'react';\nimport Pokedex from \"./Pokedex\";\nimport Pokemon from \"./Pokemon\";\nimport { Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n    return (\n      <Switch>\n        <Route exact path =\"/\" render= {(props) => <Pokedex {...props} />} />\n        <Route \n          exact\n          path =\"/:pokemonId\" \n          render= {(props) => <Pokemon {...props} />}\n        />\n      </Switch>\n    );\n}\n\nexport default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from \"./App\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history= { history }>\n      <App />\n    </Router>\n  </React.StrictMode>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}